priority 10
extends tex

# Expand math snippets only within math environments
# (source: https://castel.dev/post/lecture-notes-1/ )
global !p
texMathZones = ['texMathZone'+x for x in ['Env', 'EnvStarred', '', 'LI', 'LD', 'TI', 'TD', 'Ensured']]

texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(
            i for i in reversed(synstackids)
            if i in texIgnoreMathZoneIds or i in texMathZoneIds
        )
		return first != ignore
	except StopIteration:
		return False

def clean(s):
	return s.replace(" ", "-")
endglobal

# Include standalone
snippet standalone "Inlcude a standalone image" b
\\includestandalone[mode=tex]\{${1:file}}${0}
endsnippet

snippet subfig "Include subfigure env"
\\begin{subfigure}[${1:b}]\{${2:1}\\columnwidth}
	\\includegraphics[]\{$3}
	\\caption\{${4}}%
	\\label\{fig:$4}%
\\end\{subfigure}${0}
endsnippet

snippet notes "Include notes in beamer frame" b
\note{%
\begin{itemize}
	\item ${0}
\end{itemize}
}
endsnippet

snippet enumi* "Inline enum list with roman labels" i
\begin{enumerate*}[label=(\roman*)]
	\item $1
\end{enumerate*}
$0
endsnippet

snippet tikz_3d_canvas "Scope to draw in a specific 3D plane" i
\\begin\{scope}[canvas is ${1:xy} plane at `!p
if t[1] == 'zy':
	snip.rv = 'x'
elif t[1] == 'xy':
	snip.rv = 'z'
elif t[1] == 'xz':
	snip.rv = 'y'
else:
	snip.rv = ''
`=${2:0pt}]
	$0
\\end\{scope}
endsnippet

snippet SI "Typset number with unit (siunitx)" i
\\SI\{$1}\{${2:unit}}$0
endsnippet

snippet SIrange "Typset range with unit (siunitx)" i
\\SIrange\{${1:start}}\{${2:end}}\{${3:unit}}$0
endsnippet

snippet qt "Typset number with unit (siunitx)" i
\\qty\{${VISUAL}$1}\{${2:unit}}$0
endsnippet

snippet qtp "Typset product of numbers with unit (siunitx)" i
\\qtyproduct\{${VISUAL}$1}\{${2:unit}}$0
endsnippet

snippet unit "Typset units (siunitx)" i
\\unit\{${VISUAL}$1}$0
endsnippet

snippet nump "Typset product of numbers (siunitx)" i
\\numproduct\{${VISUAL}$1}$0
endsnippet

snippet __ "Subscript" iA
\textsubscript{$1}$0
endsnippet

snippet ^^ "Superscript" iA
\textsuperscript{$1}$0
endsnippet

# Snippets for equations
context "math()"
snippet __ "Subscript" iA
_\{${1}}$0
endsnippet

context "math()"
snippet ^^ "Superscript" iA
^\{${1}}$0
endsnippet

snippet $$ "Inline equation" iA
\\($1\\) $0
endsnippet

snippet sympy "sympy block " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "evaluate sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '') \
    .replace('^', '**') \
    .replace('{', '(') \
    .replace('}', ')') + ')')
`
endsnippet

# Insert text in equations
context "math()"
snippet tt "Text" iA
\\text\{${1}}$0
endsnippet

# foreach loop
snippet for "Foreach loop in tikz" b
\\foreach \\${1:var} in \{${2:items}}\{
$0
}
endsnippet

snippet tikzstyle "Defines a style for tikz pictures" b
\\tikzset\{${1:name}/.style=\{$0}}
endsnippet

snippet tikzpic "Defines a pic for tikz" b
\\tikzset\{${1:name}/.pic=\{$0}}
endsnippet

snippet tikzgraph "Include a figure within a node within a \visible command"
\\begin\{tikzpicture}[scale=1, transform shape]
	\\visible<${1:1}>\{
		\\node at (0,0) \{\\includegraphics\{${2:path-to-figure}}};
	}$0
\\end\{tikzpicture}
endsnippet

snippet tikzbrace "Make curly brace for annotations" b
\\draw[decorate,decoration=\{brace,amplitude=${1:10pt},raise=${2:4pt}${3:,mirror}}] $0
endsnippet

snippet ref "Add reference" w
\\ref\{$1}$0
endsnippet

snippet subref "Add reference to subfigure" w
\\subref\{$1}$0
endsnippet

snippet aref "Add autoreference" w
\\autoref\{$1}$0
endsnippet

snippet eqref "Add reference to equation" w
\\eqref\{eq:$1}$0
endsnippet

snippet emph "Emphasyze text" w
\\emph\{$1}$0
endsnippet

# Latex directives
snippet directive_programm "Latex directive for the programm" b
% !TeX TS-program = ${1:xelatex,pdflatex,lualatex}
endsnippet

snippet directive_root "Latex directive for the root file" b
% !TeX root = ${1:main-file}
endsnippet

snippet directive_spellcheck "Latex directive for spellcheck" b
% !TeX spellcheck = ${1:de_DE}
endsnippet

snippet directive_encoding "Latex directive for the encoding" b
% !TeX encoding = ${1:UTF-8}
endsnippet

snippet unis_colors "Define UniS colors" b
\\definecolor\{uniSblue}\{RGB}\{0,65,145}
\\definecolor\{uniSlightblue}\{RGB}\{0,190,255}
\\definecolor\{uniSgray}\{RGB}\{62, 68, 76}
\\definecolor\{uniSyellow}\{RGB}\{255, 213, 0}
endsnippet

# Part
snippet part "document \part" b
\\part{${1:part name}} % (fold)%
\\label{prt:${2:`!p snip.rv = clean(t[1])`}}
${0}
% part $2 (end)
endsnippet
# Chapter
snippet cha "\chapter" b
\\chapter{${1:chapter name}}%
\\label{cha:${2:`!p snip.rv = clean(t[1])`}}
${0}
endsnippet
# Section
snippet sec "\section" b
\\section{${1:section name}}%
\\label{sec:${2:`!p snip.rv = clean(t[1])`}}
${0}
endsnippet
# Section without number
snippet sec* "\section*" b
\\section*{${1:section name}}%
\\label{sec:${2:`!p snip.rv = clean(t[1])`}}
${0}
endsnippet
# Sub Section
snippet sub "\subsection" b
\\subsection{${1:subsection name}}%
\\label{sub:${2:`!p snip.rv = clean(t[1])`}}
${0}
endsnippet
# Sub Section without number
snippet sub* "\subsection*" b
\\subsection*{${1:subsection name}}%
\\label{sub:${2:`!p snip.rv = clean(t[1])`}}
${0}
endsnippet
# Sub Sub Section
snippet ssub "\subsubsection" b
\\subsubsection{${1:subsubsection name}}%
\\label{ssub:${2:`!p snip.rv = clean(t[1])`}}
${0}
endsnippet
# Sub Sub Section without number
snippet ssub* "\subsubsection*" b
\\subsubsection*{${1:subsubsection name}}%
\\label{ssub:${2:`!p snip.rv = clean(t[1])`}}
${0}
endsnippet
# Paragraph
snippet par "\paragraph" b
\\paragraph{${1:paragraph name}}%
\\label{par:${2:`!p snip.rv = clean(t[1])`}}
${0}
endsnippet
# Sub Paragraph
snippet subp "\subparagraph" b
\\subparagraph{${1:subparagraph name}}%
\\label{subp:${2:`!p snip.rv = clean(t[1])`}}
${0}
endsnippet

snippet video "Include video in presentation" b
\\href\{run:${1:../videos/file}.mp4?autostart}\{\\includegraphics[width=\\textwidth]\{${2:$1.pdf}}}
endsnippet

snippet fixfloats "Fix parameters for float placement" b
% Alter some LaTeX defaults for better treatment of figures:
% See p.105 of "TeX Unbound" for suggested values.
% See pp. 199-200 of Lamport's "LaTeX" book for details.
% General parameters, for ALL pages:
\\renewcommand\{\\topfraction}\{0.9}	% max fraction of floats at top
\\renewcommand\{\\bottomfraction}\{0.8}	% max fraction of floats at bottom
% Parameters for TEXT pages (not float pages):
\\setcounter\{topnumber}\{2}
\\setcounter\{bottomnumber}\{2}
\\setcounter\{totalnumber}\{4}     % 2 may work better
\\setcounter\{dbltopnumber}\{2}    % for 2-column pages
\\renewcommand\{\\dbltopfraction}\{0.9}	% fit big float above 2-col. text
\\renewcommand\{\\textfraction}\{0.07}	% allow minimal text w. figs
% Parameters for FLOAT pages (not text pages):
\\renewcommand\{\\floatpagefraction}\{0.7}	% require fuller float pages
% N.B.: floatpagefraction MUST be less than topfraction !!
\\renewcommand\{\\dblfloatpagefraction}\{0.7}	% require fuller float pages
endsnippet
